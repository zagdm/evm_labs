#!/bin/bash

	#initialisation

if ! [[ -n "$1" ]];
then echo "Invalid command"
exit 1
fi
my_dir=$(pwd)
opt_set=(0 1 2 3 s fast g)
test_name=$1
comp_arg=''
repeat_count=1
input_files=''
arg=''
shift

while [[ -n "$1" ]]; do
case "$1" in
-O) opt_set=( $2 ) ;;
-arg) arg=$2 ;;
-r) repeat_count=$2 ;;
-inf) input_files=$2 ;;
*) break ;;
esac
shift 2;
done

if ! [[ -n "$1" ]];
then echo "Empty cfiles"
exit 1
fi
for cfile in $@; do
if [ -f $cfile ]
then comp_arg="$comp_arg $my_dir/$cfile"
else echo "Cfile is missing"
exit 1
fi
done

	#generation

if [ -d $test_name ]
then rm -r $test_name
fi
mkdir $test_name
if ! [[ $input_files = '' ]];
then for infile in ${input_files[@]}; do
if [ -f $infile ]
then cp $infile $test_name
else echo "Infile is missing"
exit 1
fi
done
fi

cd $test_name
echo -e "Test name: $test_name\n" >> tresult.txt

for opt in ${opt_set[@]}; do
gcc -O$opt -o prog$opt $comp_arg -lm 2>>tresult.txt
if ! [[ -f prog$opt ]]
then echo -e "Compilation error\n" >>tresult.txt
exit 1
fi
done
echo -e "\nCompilation complete" >> tresult.txt

	#test

for opt in ${opt_set[@]}; do
echo -e "\nOptimisation O$opt\n" >> tresult.txt
echo -e "\n\nOptimisation O$opt" >> toutput.txt
min=1000000
for ((i = 1; i <= $repeat_count; i++)) do
echo -n -e "\n$i:" >>toutput.txt
nmin=$((sudo time -f "%U" ./prog$opt $i $arg 1>>toutput.txt ) 2>&1)
echo "$i: $nmin" >> tresult.txt
if (( $(echo "$nmin < $min" |bc -l) ));
then min=$nmin
fi
done
echo "Minimum time: $min" >> tresult.txt
done
echo -e "\nTest complete" >> tresult.txt

exit 0
